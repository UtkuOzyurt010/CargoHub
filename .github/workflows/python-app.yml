# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  scp-to-server:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up SSH keys to access the remote server securely
    - name: Set up SSH keys
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # - name: Ping the server
    #   run: ping -c 4 145.24.223.236
    - name: Test SSH connection
      run: |
        nc -zv 145.24.223.236 22
    # Step 3: Copy the repository to the remote server using SCP
    - name: SCP repository to server
      run: |
        scp -r ./api ubuntu-1079726@145.24.223.236:~/ubuntu-1079726/Cargohub
        scp -r ./data ubuntu-1079726@145.24.223.236:~/ubuntu-1079726/Cargohub
        scp ./main.py ubuntu-1079726@145.24.223.236:~/ubuntu-1079726/Cargohub
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

   